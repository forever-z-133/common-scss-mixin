@import './var.scss';
@import './utils.scss';

@mixin margin-row($n: $row-gap) {
  margin-left: $n;
  margin-right: $n;
}
@mixin margin-col($n: $col-gap) {
  margin-top: $n;
  margin-bottom: $n;
}

@mixin padding-row($n: $row-gap) {
  padding-left: $n;
  padding-right: $n;
}
@mixin padding-col($n: $col-gap) {
  padding-top: $n;
  padding-bottom: $n;
}

@mixin margin-center() {
  @include margin-row(auto);
}

@mixin child-gap-right($n: $child-gap, $children: $child-gap-children, $not: $child-gap-children-not) {
  @each $child in $children {
    @include child-map($child, $not) {
      margin-right: $n;
    }
  }
}
@mixin child-gap-bottom($n: $child-gap, $children: $child-gap-children, $not: $child-gap-children-not) {
  @each $child in $children {
    @include child-map($child, $not) {
      margin-bottom: $n;
    }
  }
}

@mixin gap-build() {
  @each $dir in left, right, top, bottom {
    @for $i from 1 through 10 {
      .margin-#{$dir}-#{$i*5} {
        margin-#{$dir}: $i * px(5);
      }
    }
  }

  @each $dir in left, right, top, bottom {
    @for $i from 1 through 10 {
      .padding-#{$dir}-#{$i*5} {
        padding-#{$dir}: $i * px(5);
      }
    }
  }

  @each $dir in right, bottom {
    @for $i from 1 through 10 {
      .gap-#{$dir}-#{$i*5} {
        @if ($dir == right) {
          @include child-gap-right($i * px(5));
        } @else if ($dir == bottom) {
          @include child-gap-bottom($i * px(5));
        }
      }
    }
  }

  .margin-center {
    @include margin-center();
  }
}
