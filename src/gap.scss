@import './var.scss';

/* 两边间隙 */
@mixin margin($n: $row-gap) {
  margin: $n;
}
@mixin margin-row($n: $row-gap) {
  margin-left: $n;
  margin-right: $n;
}
@mixin margin-col($n: $row-gap) {
  margin-top: $n;
  margin-bottom: $n;
}

/* 两边间隙 */
@mixin padding($n: $row-gap) {
  padding: $n;
}
@mixin padding-row($n: $row-gap) {
  padding-left: $n;
  padding-right: $n;
}
@mixin padding-col($n: $row-gap) {
  padding-top: $n;
  padding-bottom: $n;
}

/* 其他间隙 */
@mixin margin-center() {
  @include margin-row(auto);
}

/* 子级间隙 */
@mixin child-gap-right($n: $child-gap) {
  & > :not(:last-child) {
    margin-right: $n;
  }
}
@mixin child-gap-bottom($n: $child-gap) {
  & > :not(:last-child) {
    margin-bottom: $n;
  }
}

/* 导出结果 */
@mixin gap-build() {
  @each $dir in left, right, top, bottom {
    @for $i from 1 through 10 {
      .margin-#{$dir}-#{$i*5} {
        margin-#{$dir}: $i * $child-gap;
      }
    }
  }

  @each $dir in left, right, top, bottom {
    @for $i from 1 through 10 {
      .padding-#{$dir}-#{$i*5} {
        padding-#{$dir}: $i * $child-gap;
      }
    }
  }

  @each $dir in right, bottom {
    @for $i from 1 through 10 {
      .gap-#{$dir}-#{$i*5} {
        @if ($dir == right) {
          @include child-gap-right($i * $child-gap);
        } @else if ($dir == bottom) {
          @include child-gap-bottom($i * $child-gap);
        }
      }
    }
  }

  .margin-center {
    @include margin-center();
  }
}
