@import './var.scss';

// 横向 flex
@mixin flex-row-normal() {
  display: flex;
  align-items: center;
}
@mixin flex-row($children: $flex-grow-children) {
  @include flex-row-normal();
  @include flex-row-child($children);
}
@mixin flex-row-child($children: $flex-grow-children) {
  @each $child in $children {
    & > #{$child} {
      flex-grow: 1;
    }
    @each $el in $flex-shrink-children {
      & > #{$el}:not(#{$child}) {
        flex-shrink: 0;
      }
    }
  }
}
@mixin flex-row-top() {
  align-items: flex-start;
}
@mixin flex-row-middle() {
  align-items: center;
}
@mixin flex-row-bottom() {
  align-items: flex-end;
}
@mixin flex-row-stretch() {
  align-items: stretch;
}
@mixin flex-row-left() {
  justify-content: flex-start;
}
@mixin flex-row-center() {
  justify-content: center;
}
@mixin flex-row-right() {
  justify-content: flex-end;
}
@mixin flex-row-space() {
  justify-content: space-between;
}
@mixin flex-row-wrap() {
  flex-wrap: wrap;
}

// 纵向 flex
@mixin flex-col-normal() {
  display: flex;
  flex-direction: column;
}
@mixin flex-col($children: $flex-grow-children) {
  @include flex-col-normal();
  @include flex-col-child($children);
}
@mixin flex-col-child($children: $flex-grow-children) {
  @each $child in $children {
    & > #{$child} {
      flex-grow: 1;
    }
    @each $el in $flex-shrink-children {
      & > #{$el}:not(#{$child}) {
        flex-shrink: 0;
      }
    }
  }
}
@mixin flex-col-top() {
  justify-content: flex-start;
}
@mixin flex-col-middle() {
  justify-content: center;
}
@mixin flex-col-bottom() {
  justify-content: flex-end;
}
@mixin flex-col-space() {
  justify-content: space-between;
}
@mixin flex-col-left() {
  align-items: flex-start;
}
@mixin flex-col-center() {
  align-items: center;
}
@mixin flex-col-right() {
  align-items: flex-end;
}

// flex 居中
@mixin flex-center() {
  @include flex-row-normal();
  @include flex-row-center();
}

// flex 分栏布局
@mixin flex-column($column: 2, $children: $flex-column-grow-children) {
  display: flex;
  @each $child in $children {
    & > #{$child} {
      flex-grow: 1;
      flex-basis: (100 / $column) * 1%;
    }
  }
}

@mixin flex-build() {
  .flex-row {
    @include flex-row();
    &.top {
      @include flex-row-top();
    }
    &.middle {
      @include flex-row-middle();
    }
    &.bottom {
      @include flex-row-bottom();
    }
    &.stretch {
      @include flex-row-stretch();
    }
    &.left {
      @include flex-row-left();
    }
    &.center {
      @include flex-row-center();
    }
    &.right {
      @include flex-row-right();
    }
    &.space {
      @include flex-row-space();
    }
    &.wrap {
      @include flex-row-wrap();
    }
  }

  .flex-col {
    @include flex-col();
    &.top {
      @include flex-col-top();
    }
    &.middle {
      @include flex-col-middle();
    }
    &.bottom {
      @include flex-col-bottom();
    }
    &.space {
      @include flex-col-space();
    }
    &.left {
      @include flex-col-left();
    }
    &.center {
      @include flex-col-center();
    }
    &.right {
      @include flex-col-right();
    }
  }

  .flex-center {
    @include flex-center();
  }

  @each $i in 2, 3, 4, 5 {
    .col-in-#{$i} {
      @include flex-column($i);
    }
  }
}
